<?php

/**
 * This is the model base class for the table "month_puzzle".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "MonthPuzzle".
 *
 * Columns in table "month_puzzle" available as properties of the model,
 * and there are no model relations.
 *
 * @property string $id
 * @property string $month
 * @property string $title
 * @property string $question
 * @property string $answer
 * @property integer $active
 *
 */
abstract class BaseMonthPuzzle extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'month_puzzle';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'MonthPuzzle|MonthPuzzles', $n);
	}

	public static function representingColumn() {
		return 'month';
	}

	public function rules() {
		return array(
			array('month, title, question, answer', 'required'),
			array('active', 'numerical', 'integerOnly'=>true),
			array('month', 'length', 'max'=>45),
			array('title', 'length', 'max'=>255),
			array('active', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, month, title, question, answer, active', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'month' => Yii::t('app', 'Month'),
			'title' => Yii::t('app', 'Title'),
			'question' => Yii::t('app', 'Question'),
			'answer' => Yii::t('app', 'Answer'),
			'active' => Yii::t('app', 'Active'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id, true);
		$criteria->compare('month', $this->month, true);
		$criteria->compare('title', $this->title, true);
		$criteria->compare('question', $this->question, true);
		$criteria->compare('answer', $this->answer, true);
//		$criteria->compare('active', $this->active);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}