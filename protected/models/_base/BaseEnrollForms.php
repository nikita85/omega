<?php

/**
 * This is the model base class for the table "enroll_forms".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "EnrollForms".
 *
 * Columns in table "enroll_forms" available as properties of the model,
 * followed by relations of table "enroll_forms" available as properties of the model.
 *
 * @property integer $id
 * @property integer $form_id
 *
 * @property EnrollFormHillview[] $enrollFormHillviews
 * @property EnrollFormKnoll[] $enrollFormKnolls
 * @property EnrollFormSummer[] $enrollFormSummers
 * @property Forms $form
 * @property StudentSeminars[] $studentSeminars
 */
abstract class BaseEnrollForms extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'enroll_forms';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'EnrollForms|EnrollForms', $n);
	}

	public static function representingColumn() {
		return 'id';
	}

	public function rules() {
		return array(
			array('form_id', 'required'),
			array('form_id', 'numerical', 'integerOnly'=>true),
			array('id, form_id', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'enrollFormHillviews' => array(self::HAS_MANY, 'EnrollFormHillview', 'enroll_form_id'),
			'enrollFormKnolls' => array(self::HAS_MANY, 'EnrollFormKnoll', 'enroll_form_id'),
			'enrollFormSummers' => array(self::HAS_MANY, 'EnrollFormSummer', 'enroll_form_id'),
			'form' => array(self::BELONGS_TO, 'Forms', 'form_id'),
			'studentSeminars' => array(self::HAS_MANY, 'StudentSeminars', 'enroll_form_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'form_id' => null,
			'enrollFormHillviews' => null,
			'enrollFormKnolls' => null,
			'enrollFormSummers' => null,
			'form' => null,
			'studentSeminars' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('form_id', $this->form_id);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}