<?php

/**
 * This is the model base class for the table "orders".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Orders".
 *
 * Columns in table "orders" available as properties of the model,
 * followed by relations of table "orders" available as properties of the model.
 *
 * @property string $id
 * @property string $amount
 * @property string $details
 * @property string $payment_status
 *
 * @property EnrollFormHillview[] $enrollFormHillviews
 * @property EnrollFormKnoll[] $enrollFormKnolls
 * @property EnrollFormSummer[] $enrollFormSummers
 * @property StudentSeminars[] $studentSeminars
 */
abstract class BaseOrders extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'orders';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Orders|Orders', $n);
	}

	public static function representingColumn() {
		return 'amount';
	}

	public function rules() {
		return array(
			array('amount, details, payment_status', 'required'),
			array('amount', 'length', 'max'=>10),
			array('payment_status', 'length', 'max'=>9),
			array('id, amount, details, payment_status', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'enrollFormHillviews' => array(self::HAS_MANY, 'EnrollFormHillview', 'order_id'),
			'enrollFormKnolls' => array(self::HAS_MANY, 'EnrollFormKnoll', 'order_id'),
			'enrollFormSummers' => array(self::HAS_MANY, 'EnrollFormSummer', 'order_id'),
			'studentSeminars' => array(self::HAS_MANY, 'StudentSeminars', 'order_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'amount' => Yii::t('app', 'Amount'),
			'details' => Yii::t('app', 'Details'),
			'payment_status' => Yii::t('app', 'Payment Status'),
			'enrollFormHillviews' => null,
			'enrollFormKnolls' => null,
			'enrollFormSummers' => null,
			'studentSeminars' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id, true);
		$criteria->compare('amount', $this->amount, true);
		$criteria->compare('details', $this->details, true);
		$criteria->compare('payment_status', $this->payment_status, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}